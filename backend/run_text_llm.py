# ---------------------------------------------------------------------
# Copyright (c) 2025 Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause
#
# Modified for integration with the Electron Baby Monitor App.
# ---------------------------------------------------------------------

import sys
from qai_hub_models.models.llama_v3_2_3b_instruct.model import Model as Llama3Model

# --- Constants ---
# You can adjust these parameters if needed.
# max_toks determines the maximum length of the generated response.
MAX_OUTPUT_TOKENS = 512

def run_inference(prompt: str) -> str:
    """
    Initializes the Llama 3 model and runs inference on a given prompt.

    Args:
        prompt: The input string to send to the model.

    Returns:
        The text generated by the model.
    """
    print("Loading Llama 3 model...", file=sys.stderr)
    # This will load the model from the local cache if it has been downloaded.
    # The first run might be slow due to model loading.
    model = Llama3Model.from_pretrained(max_output_tokens=MAX_OUTPUT_TOKENS)
    print("Model loaded. Generating response...", file=sys.stderr)

    # The model's generate method takes the prompt and returns the output.
    response = model.generate(prompt)

    print("Generation complete.", file=sys.stderr)
    return response


def main():
    """
    Main function to handle command-line arguments and execute the model.
    """
    if len(sys.argv) < 2:
        print("Error: Missing prompt argument.", file=sys.stderr)
        print("Usage: python run_text_llm.py \"<your_prompt>\"", file=sys.stderr)
        sys.exit(1)

    # Combine all command-line arguments into a single prompt string.
    prompt = " ".join(sys.argv[1:])

    try:
        # Run inference and get the model's response.
        output = run_inference(prompt)
        # Print the final output to stdout so the Node.js process can capture it.
        print(output)
    except Exception as e:
        print(f"An error occurred during model inference: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
